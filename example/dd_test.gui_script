require "dirtydentist.dd"

local sildervalue = 0

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_stretch_projection", { near = -1, far = 1 })
	
	localisationofstrings("Ingen hittades", "Välj ett värde")
	
	jedilist = {
		"Luke Skywalker",
		"Obi-Wan Kenobi",
		"Yoda",
		"Anakin Skywalker",
		"Mace Windu",
		"Qui-Gon Jinn",
		"Rey",
		"Ahsoka Tano",
		"Ki-Adi-Mundi",
		"Plo Koon",
		"Kit Fisto",
		"Shaak Ti",
		"Aayla Secura",
		"Luminara Unduli",
		"Ezra Bridger",
		"Kanan Jarrus",
		"Cal Kestis",
		"Jolee Bindo",
		"Bastila Shan",
		"Barriss Offee",
		"Saesee Tiin",
		"Agen Kolar",
		"A'Sharad Hett",
		"Stass Allie",
		"Quinlan Vos",
		"Depa Billaba",
		"Adi Gallia",
		"Eeth Koth",
		"Kazdan Paratus",
		"Yaddle"
	}
	dropdown_init(self, "ddEtt", jedilist, true)
	dropdown_init(self, "ddTva", {"ett","två"}, true)
	dropdown_init(self, "ddTre", {"ett","två"}, true)
	dropdown_init(self, "ddFyra", {"ett","två"}, true)
	dropdown_init(self, "comboEtt", jedilist, true)
	dropdown_init(self, "comboTva", jedilist, true)
	dropdown_init(self, "comboTre", jedilist, true)
	dropdown_init(self, "comboFyra", jedilist, true)
end

function on_input(self, action_id, action)
	sildervalue = slider(self, action_id, action, "slider") * 100
	gui.set_text(gui.get_node("sildetext"), sildervalue)
	
	dropdown_interact(self, action_id, action, "ddEtt",jedilist, true)
	dropdown_interact(self, action_id, action, "ddTva",{"ett","två"},true)
	dropdown_interact(self, action_id, action, "ddTre",{"ett","två"},true)
	dropdown_interact(self, action_id, action, "ddFyra",jedilist,true)
	
	text = textbox_input(self, action_id, action, "box", true)
	text2 = text_input(self, action_id, action, "input", true)
	
	combobox_interact(self, action_id, action, "comboEtt", jedilist,true)
	combobox_interact(self, action_id, action, "comboTva", jedilist,true)
	combobox_interact(self, action_id, action, "comboTre", jedilist,false)
	combobox_interact(self, action_id, action, "comboFyra", jedilist,true)

	if button_touch(self, action_id, action, "buttonEtt", true) then
		textbox_clear("box")
		gui.set_text(gui.get_node("buttontext"), "I'm pressed!")
	end

	checkbox(self, action_id, action, "checkEtt", true)

	radio(self, action_id, action, 1, {"radioEtt", "radioTva"}, true)
end